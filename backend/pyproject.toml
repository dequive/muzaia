[tool.poetry]
name = "muzaia"
version = "0.1.0"
description = "Backend for the Muzaia project"
authors = ["dequive <dequive@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
psycopg2-binary = "^2.9.9"
asyncpg = "^0.29.0"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
structlog = "^23.2.0"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
aiofiles = "^23.2.1"
httpx = "^0.27.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-mock = "^3.12.0"
httpx = "^0.27.0"

# Dependências opcionais para consenso semântico
sentence-transformers = "^2.2.2"
scikit-learn = "^1.3.2"
torch = "^2.2.0"
transformers = "^4.35.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# Informa ao Pytest para adicionar o diretório 'backend' ao path,
# permitindo que ele encontre e importe o módulo 'app'.
pythonpath = ["backend"]
# Define as variáveis de ambiente necessárias para os testes.
env = [
    "DANGER_TESTING_MODE=true",
    "DATABASE_URL=sqlite+aiosqlite:///./test.db"
]