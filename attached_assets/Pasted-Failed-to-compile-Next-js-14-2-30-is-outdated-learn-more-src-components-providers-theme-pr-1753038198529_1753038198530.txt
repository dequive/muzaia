Failed to compile

Next.js (14.2.30) is outdated (learn more)
./src/components/providers/theme-provider.tsx
Error: 
  × the name `ThemeProvider` is defined multiple times
    ╭─[/home/runner/workspace/frontend/src/components/providers/theme-provider.tsx:5:1]
  5 │ import { ThemeProvider as NextThemesProvider } from 'next-themes'
  6 │ import { type ThemeProviderProps } from 'next-themes/dist/types'
  7 │ 
  8 │ export function ThemeProvider({ children, ...props }: ThemeProviderProps) {
    ·                 ──────┬──────
    ·                       ╰── previous definition of `ThemeProvider` here
  9 │   return <NextThemesProvider {...props}>{children}</NextThemesProvider>
 10 │ }
 11 │ 'use client'
 12 │ 
 13 │ import { createContext, useContext, useEffect, useState } from 'react'
 14 │ 
 15 │ type Theme = 'dark' | 'light' | 'system'
 16 │ 
 17 │ type ThemeProviderProps = {
 18 │   children: React.ReactNode
 19 │   defaultTheme?: Theme
 20 │   storageKey?: string
 21 │ }
 22 │ 
 23 │ type ThemeProviderState = {
 24 │   theme: Theme
 25 │   setTheme: (theme: Theme) => void
 26 │ }
 27 │ 
 28 │ const initialState: ThemeProviderState = {
 29 │   theme: 'system',
 30 │   setTheme: () => null,
 31 │ }
 32 │ 
 33 │ const ThemeProviderContext = createContext<ThemeProviderState>(initialState)
 34 │ 
 35 │ export function ThemeProvider({
    ·                 ──────┬──────
    ·                       ╰── `ThemeProvider` redefined here
 36 │   children,
 37 │   defaultTheme = 'system',
 38 │   storageKey = 'mozaia-ui-theme',
    ╰────

  × The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ╭─[/home/runner/workspace/frontend/src/components/providers/theme-provider.tsx:8:1]
  8 │ export function ThemeProvider({ children, ...props }: ThemeProviderProps) {
  9 │   return <NextThemesProvider {...props}>{children}</NextThemesProvider>
 10 │ }
 11 │ 'use client'
    · ────────────
 12 │ 
 13 │ import { createContext, useContext, useEffect, useState } from 'react'
    ╰────